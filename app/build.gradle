plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.jj.whitenoise"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                arguments "-DANDROID_STL=c++_shared" //不加这行报错cmake dlopen failed: library "libc++_shared.so" not found，
                                                     // 也就是System.loadLibrary("xx.so")
                version "3.18.1"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    flavorDimensions "extractorLibrary"
    productFlavors {
        ndkExtractor {
            dimension "extractorLibrary"

            // Oboe has a minimum API of 16, but AMediaExtractor (used to extract the MP3 assets)
            // is only available from API 21.
            // For further backward compatibility consider using FFmpeg (see below)
            minSdkVersion 21
            externalNativeBuild {
                cmake {
                    arguments "-DUSE_FFMPEG=0"
                }
            }
        }
        /**
         * To use FFmpeg for asset extraction do the following:
         * - Uncomment this block
         * - Change the build variant to ffmpegExtractor
         * - Update the FFMPEG_DIR variable in CMakeLists.txt to the local FFmpeg path
         */
        /*
        ffmpegExtractor {
            dimension "extractorLibrary"
            minSdkVersion 16
            externalNativeBuild {
                cmake {
                    arguments "-DUSE_FFMPEG=1"
                }
            }
        }
        */
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //Android Gradle 插件 4.0，上述配置不再是必需的，并且会导致构建失败：
    //https://developer.android.com/studio/releases/gradle-plugin#cmake-imported-targets
//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['libs']
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}